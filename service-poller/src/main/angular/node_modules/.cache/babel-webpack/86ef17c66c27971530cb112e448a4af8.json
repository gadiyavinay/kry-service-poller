{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.service\";\nimport * as i2 from \"./header/header.component\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./services.component\";\n\nfunction AppComponent_app_services_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-services\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"services\", ctx_r0.services);\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(appService) {\n      this.appService = appService;\n      this.title = 'service-poller';\n      this.serviceForm = new FormGroup({\n        name: new FormControl('', Validators.required),\n        url: new FormControl('', Validators.required)\n      });\n      this.services = [];\n      this.serviceCount = 0;\n      this.destroy$ = new Subject();\n    }\n\n    onSubmit() {\n      this.appService.addService(this.serviceForm.value).pipe(takeUntil(this.destroy$)).subscribe(data => {\n        console.log('message::::', data);\n        this.serviceForm.reset();\n      });\n    }\n\n    getAllServices() {\n      this.appService.getServices().pipe(takeUntil(this.destroy$)).subscribe(services => {\n        this.serviceCount = services.length;\n        this.services = services;\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.unsubscribe();\n    }\n\n    ngOnInit() {\n      this.getAllServices();\n    }\n\n    reloadCurrentPage() {\n      window.location.reload();\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AppService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[\"fxFlex\", \"25\", 1, \"sec1\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-7\", \"mrgnbtm\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"exampleInputName\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"name\", \"placeholder\", \"Service Name\", 1, \"form-control\"], [\"for\", \"exampleInputUrl\"], [\"type\", \"text\", \"formControlName\", \"url\", \"id\", \"url\", \"placeholder\", \"Url\", \"pattern\", \"https?://.+\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"mrgnbtm\", 3, \"disabled\", \"click\"], [\"fxFlex\", \"75\", 1, \"sec2\", \"mrgnbtm\"], [3, \"services\", 4, \"ngIf\"], [3, \"services\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"h2\");\n        i0.ɵɵtext(6, \"Create Service\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 2);\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵelementStart(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Url\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_17_listener() {\n          return ctx.reloadCurrentPage();\n        });\n        i0.ɵɵtext(18, \"Add/Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 11);\n        i0.ɵɵtemplate(20, AppComponent_app_services_20_Template, 1, 1, \"app-services\", 12);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.serviceForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", !ctx.serviceForm.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.services.length !== 0);\n      }\n    },\n    directives: [i2.HeaderComponent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.PatternValidator, i4.NgIf, i5.ServicesComponent],\n    styles: [\".mrgnbtm[_ngcontent-%COMP%]{margin-top:20px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}